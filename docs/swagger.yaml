basePath: /
definitions:
  main.MessageModel:
    properties:
      message:
        type: string
    type: object
  main.Motion:
    properties:
      abstain:
        items:
          type: integer
        type: array
      against:
        items:
          type: integer
        type: array
      createdAt:
        type: string
      description:
        type: string
      for:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
      sessionID:
        type: integer
      status:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    required:
    - name
    type: object
  main.MotionAdd:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  main.Session:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      motions:
        items:
          $ref: '#/definitions/main.Motion'
        type: array
      name:
        type: string
      updatedAt:
        type: string
    required:
    - name
    type: object
  main.SessionAdd:
    properties:
      name:
        type: string
    type: object
  main.SimpleSession:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    required:
    - name
    type: object
  main.User:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    required:
    - name
    type: object
info:
  contact:
    email: jsclndnz@gmail.com
    name: Maintainer Shi Yue
  description: voter backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Voter
  version: 0.1.0
paths:
  /:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.MessageModel'
  /motion:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Motion'
      summary: Get The Last Motion
      tags:
      - Motion
  /motions:
    post:
      consumes:
      - application/json
      description: Add the motion to the latest session
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/main.MotionAdd'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Motion'
      security:
      - ApiKeyAuth: []
      summary: Add A Motion
      tags:
      - Motion
    put:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Motion'
      summary: Resolve A Motion
      tags:
      - Motion
  /motions/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Motion'
      summary: Get A Motion
      tags:
      - Motion
  /motions/{type}:
    post:
      parameters:
      - description: type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Motion'
      security:
      - ApiKeyAuth: []
      summary: Vote A Motion
      tags:
      - Motion
  /session:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Session'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.MessageModel'
      summary: Get The Last Session
      tags:
      - Session
  /sessions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.SimpleSession'
            type: array
      summary: List Sessions
      tags:
      - Session
    put:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/main.SessionAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Session'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Session'
      summary: Add A Session
      tags:
      - Session
  /sessions/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Session'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.MessageModel'
      summary: Get Session
      tags:
      - Session
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
      summary: List Users
      tags:
      - User
  /users/{name}:
    put:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
      summary: Add A User
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
